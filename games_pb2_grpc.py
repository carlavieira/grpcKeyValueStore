# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import games_pb2 as games__pb2


class GameServiceStub(object):
    """The client service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.get = channel.unary_unary(
                '/game_kv_store.GameService/get',
                request_serializer=games__pb2.Key.SerializeToString,
                response_deserializer=games__pb2.Value.FromString,
                )
        self.put = channel.unary_unary(
                '/game_kv_store.GameService/put',
                request_serializer=games__pb2.NewGame.SerializeToString,
                response_deserializer=games__pb2.Void.FromString,
                )
        self.getAllKeys = channel.unary_unary(
                '/game_kv_store.GameService/getAllKeys',
                request_serializer=games__pb2.Void.SerializeToString,
                response_deserializer=games__pb2.StoredKeys.FromString,
                )


class GameServiceServicer(object):
    """The client service definition.
    """

    def get(self, request, context):
        """Retrieves a key from a server.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def put(self, request, context):
        """Set a key on a server.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getAllKeys(self, request, context):
        """List all the keys defined on a server.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GameServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'get': grpc.unary_unary_rpc_method_handler(
                    servicer.get,
                    request_deserializer=games__pb2.Key.FromString,
                    response_serializer=games__pb2.Value.SerializeToString,
            ),
            'put': grpc.unary_unary_rpc_method_handler(
                    servicer.put,
                    request_deserializer=games__pb2.NewGame.FromString,
                    response_serializer=games__pb2.Void.SerializeToString,
            ),
            'getAllKeys': grpc.unary_unary_rpc_method_handler(
                    servicer.getAllKeys,
                    request_deserializer=games__pb2.Void.FromString,
                    response_serializer=games__pb2.StoredKeys.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'game_kv_store.GameService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GameService(object):
    """The client service definition.
    """

    @staticmethod
    def get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/game_kv_store.GameService/get',
            games__pb2.Key.SerializeToString,
            games__pb2.Value.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def put(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/game_kv_store.GameService/put',
            games__pb2.NewGame.SerializeToString,
            games__pb2.Void.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getAllKeys(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/game_kv_store.GameService/getAllKeys',
            games__pb2.Void.SerializeToString,
            games__pb2.StoredKeys.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
